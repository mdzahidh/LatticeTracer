/* lcc generated prototype file. Do not edit */
#ifndef __glmmatrix_h__
#define __glmmatrix_h__

extern const float  GLM_IDENTITY_MATRIX_2F[4];
extern const double GLM_IDENTITY_MATRIX_2D[4];
extern const float  GLM_IDENTITY_MATRIX_3F[9];
extern const double GLM_IDENTITY_MATRIX_3D[9];
extern const float  GLM_IDENTITY_MATRIX_4F[16];
extern const double GLM_IDENTITY_MATRIX_4D[16];

#ifdef __cplusplus
	extern "C" {
#endif
	
void glmMatrixFromVectors2f(float *, const float *, const float *);
void glmMatrixFromVectors2d(double *, const double *, const double *);
void glmMatrixFromVectors2fT(float *, const float *, const float *);
void glmMatrixFromVectors2dT(double *, const double *, const double *);
void glmMatrixFromVectors3f(float *, const float *, const float *, const float *);
void glmMatrixFromVectors3d(double *, const double *, const double *, const double *);
void glmMatrixFromVectors3fT(float *, const float *, const float *, const float *);
void glmMatrixFromVectors3dT(double *, const double *, const double *, const double *);
void glmMatrixFromVectors4f(float *, const float *, const float *, const float *, const float *);
void glmMatrixFromVectors4d(double *, const double *, const double *, const double *, const double *);
void glmMatrixFromVectors4fT(float *, const float *, const float *, const float *, const float *);
void glmMatrixFromVectors4dT(double *, const double *, const double *, const double *, const double *);
void glmCopyMatrix2f(const float *, float *);
void glmCopyMatrix2d(const double *, double *);
void glmCopyMatrix3f(const float *, float *);
void glmCopyMatrix3d(const double *, double *);
void glmCopyMatrix4f(const float *, float *);
void glmCopyMatrix4d(const double *, double *);
void glmCopyMatrix5f(const float *, float *);
void glmCopyMatrix5d(const double *, double *);
float glmDeterminant2f(const float *);
double glmDeterminant2d(const double *);
float glmDeterminant3f(const float *);
double glmDeterminant3d(const double *);
float glmDeterminant4f(const float *);
double glmDeterminant4d(const double *);
int glmGenerateInverseMatrix2f(float *, const float *);
int glmGenerateInverseMatrix2d(double *, const double *);
int glmGenerateInverseMatrix3f(float *, const float *);
int glmGenerateInverseMatrix3d(double *, const double *);
int glmGenerateInverseMatrix4f(float *, const float *);
int glmGenerateInverseMatrix4d(double *, const double *);
void glmGenerateTransposeMatrix2f(float *, const float *);
void glmGenerateTransposeMatrix2d(double *, const double *);
void glmGenerateTransposeMatrix3f(float *, const float *);
void glmGenerateTransposeMatrix3d(double *, const double *);
void glmGenerateTransposeMatrix4f(float *, const float *);
void glmGenerateTransposeMatrix4d(double *, const double *);
void glmTransposeMatrix2f(float *);
void glmTransposeMatrix2d(double *);
void glmTransposeMatrix3f(float *);
void glmTransposeMatrix3d(double *);
void glmTransposeMatrix4f(float *);
void glmTransposeMatrix4d(double *);
void glmTransposeMatrixf(float *, unsigned long);
void glmTransposeMatrixd(double *, unsigned long);
void glmMultMatrix2f(float *, const float *, const float *);
void glmMultMatrix2d(double *, const double *, const double *);
void glmMultMatrix3f(float *, const float *, const float *);
void glmMultMatrix3d(double *, const double *, const double *);
void glmMultMatrix4f(float *, const float *, const float *);
void glmMultMatrix4d(double *, const double *, const double *);
void glmMultMatrix5f(float *, const float *, const float *);
void glmMultMatrix5d(double *, const double *, const double *);
void glmAddMatrix2f(float *, const float *, const float *);
void glmAddMatrix2d(double *, const double *, const double *);
void glmAddMatrix3f(float *, const float *, const float *);
void glmAddMatrix3d(double *, const double *, const double *);
void glmAddMatrix4f(float *, const float *, const float *);
void glmAddMatrix4d(double *, const double *, const double *);
void glmSubtractMatrix2f(float *, const float *, const float *);
void glmSubtractMatrix2d(double *, const double *, const double *);
void glmSubtractMatrix3f(float *, const float *, const float *);
void glmSubtractMatrix3d(double *, const double *, const double *);
void glmSubtractMatrix4f(float *, const float *, const float *);
void glmSubtractMatrix4d(double *, const double *, const double *);
void glmGenerateRotationMatrix2fRad(float *, float);
void glmGenerateRotationMatrix2fDeg(float *, float);
void glmGenerateRotationMatrix2dRad(double *, double);
void glmGenerateRotationMatrix2dDeg(double *, double);
void glmGenerateXRotationMatrix3fRad(float *, float);
void glmGenerateXRotationMatrix3fDeg(float *, float);
void glmGenerateXRotationMatrix3dRad(double *, double);
void glmGenerateXRotationMatrix3dDeg(double *, double);
void glmGenerateXRotationMatrix4fRad(float *, float);
void glmGenerateXRotationMatrix4fDeg(float *, float);
void glmGenerateXRotationMatrix4dRad(double *, double);
void glmGenerateXRotationMatrix4dDeg(double *, double);
void glmGenerateYRotationMatrix3fRad(float *, float);
void glmGenerateYRotationMatrix3fDeg(float *, float);
void glmGenerateYRotationMatrix3dRad(double *, double);
void glmGenerateYRotationMatrix3dDeg(double *, double);
void glmGenerateYRotationMatrix4fRad(float *, float);
void glmGenerateYRotationMatrix4fDeg(float *, float);
void glmGenerateYRotationMatrix4dRad(double *, double);
void glmGenerateYRotationMatrix4dDeg(double *, double);
void glmGenerateZRotationMatrix3fRad(float *, float);
void glmGenerateZRotationMatrix3fDeg(float *, float);
void glmGenerateZRotationMatrix3dRad(double *, double);
void glmGenerateZRotationMatrix3dDeg(double *, double);
void glmGenerateZRotationMatrix4fRad(float *, float);
void glmGenerateZRotationMatrix4fDeg(float *, float);
void glmGenerateZRotationMatrix4dRad(double *, double);
void glmGenerateZRotationMatrix4dDeg(double *, double);
void glmGenerateXYRotationMatrix4fDeg(float *, float);
void glmGenerateXYRotationMatrix4dDeg(double *, double);
void glmGenerateYZRotationMatrix4fDeg(float *, float);
void glmGenerateYZRotationMatrix4dDeg(double *, double);
void glmGenerateXZRotationMatrix4fDeg(float *, float);
void glmGenerateXZRotationMatrix4dDeg(double *, double);
void glmGenerateXWRotationMatrix4fDeg(float *, float);
void glmGenerateXWRotationMatrix4dDeg(double *, double);
void glmGenerateYWRotationMatrix4fDeg(float *, float);
void glmGenerateYWRotationMatrix4dDeg(double *, double);
void glmGenerateZWRotationMatrix4fDeg(float *, float);
void glmGenerateZWRotationMatrix4dDeg(double *, double);
void glmGenerateRotationMatrixFromAngles4fDeg(float *, float, float, float);
void glmGenerateRotationMatrixFromAngles4fRad(float *, float, float, float);
void glmGenerateRotationMatrixFromAngles4dDeg(double *, double, double, double);
void glmGenerateRotationMatrixFromAngles4dRad(double *, double, double, double);
void glmGenerateTranslationMatrix3f(float *, const float *);
void glmGenerateTranslationMatrix3d(double *, const double *);
void glmGenerateTranslationMatrix4f(float *, const float *);
void glmGenerateTranslationMatrix4d(double *, const double *);
void glmGenerateTranslationMatrix5f(float *, const float *);
void glmGenerateTranslationMatrix5d(double *, const double *);
void glmGenerateIdentityMatrix2f(float *);
void glmGenerateIdentityMatrix2d(double *);
void glmGenerateIdentityMatrix3f(float *);
void glmGenerateIdentityMatrix3d(double *);
void glmGenerateIdentityMatrix4f(float *);
void glmGenerateIdentityMatrix4d(double *);
void glmGenerateZeroMatrix2f(float *);
void glmGenerateZeroMatrix2d(double *);
void glmGenerateZeroMatrix3f(float *);
void glmGenerateZeroMatrix3d(double *);
void glmGenerateZeroMatrix4f(float *);
void glmGenerateZeroMatrix4d(double *);
void glmMultVectorByMatrix2f(float *, const float *, const float *);
void glmMultVectorByMatrix2d(double *, const double *, const double *);
void glmMultVectorByMatrix32f(float *, const float *, const float *);
void glmMultVectorByMatrix32d(double *, const double *, const double *);
void glmMultVectorByMatrix3f(float *, const float *, const float *);
void glmMultVectorByMatrix3d(double *, const double *, const double *);
void glmMultVectorByMatrix43f(float *, const float *, const float *);
void glmMultVectorByMatrix43d(double *, const double *, const double *);
void glmMultVectorBySubMatrix43f(float *, const float *, const float *);
void glmMultVectorBySubMatrix43d(double *, const double *, const double *);
void glmMultVectorByMatrix4f(float *, const float *, const float *);
void glmMultVectorByMatrix4d(double *, const double *, const double *);
void glmMultVectorByMatrix5f(float *, const float *, const float *);
void glmMultVectorByMatrix5d(double *, const double *, const double *);
void glmMultVectorByMatrix54f(float *, const float *, const float *);
void glmMultVectorByMatrix54d(double *, const double *, const double *);
void glmGenerateInertiaMatrixForBox3f(float *, float, float, float, float);
void glmGenerateInertiaMatrixForBox3d(double *, double, double, double, double);
void glmGenerateInertiaMatrixForBox4f(float *, float, float, float, float);
void glmGenerateInertiaMatrixForBox4d(double *, double, double, double, double);
void glmGenerateInertiaMatrixForSphere3f(float *, float, float);
void glmGenerateInertiaMatrixForSphere3d(double *, double, double);
void glmGenerateInertiaMatrixForSphere4f(float *, float, float);
void glmGenerateInertiaMatrixForSphere4d(double *, double, double);
void glmGenerateInertiaMatrixForCylinder3f(float *, float, float, float);
void glmGenerateInertiaMatrixForCylinder3d(double *, double, double, double);
void glmGenerateInertiaMatrixForCylinder4f(float *, float, float, float);
void glmGenerateInertiaMatrixForCylinder4d(double *, double, double, double);
void glmGenerateInertiaMatrixForTorus3f(float *, float, float, float);
void glmGenerateInertiaMatrixForTorus3d(double *, double, double, double);
void glmGenerateInertiaMatrixForTorus4f(float *, float, float, float);
void glmGenerateInertiaMatrixForTorus4d(double *, double, double, double);
void glmGenerateScaleMatrix2f(float *, const float *);
void glmGenerateScaleMatrix2d(double *, const double *);
void glmGenerateScaleMatrix3f(float *, const float *);
void glmGenerateScaleMatrix3d(double *, const double *);
void glmGenerateScaleMatrix4f(float *, const float *);
void glmGenerateScaleMatrix4d(double *, const double *);
void glmGenerateAxisAngleRotationMatrix3fRad(float *, const float *, float);
void glmGenerateAxisAngleRotationMatrix3fDeg(float *, const float *, float);
void glmGenerateAxisAngleRotationMatrix3dRad(double *, const double *, double);
void glmGenerateAxisAngleRotationMatrix3dDeg(double *, const double *, double);
void glmGenerateAxisAngleRotationMatrix4fRad(float *, const float *, float);
void glmGenerateAxisAngleRotationMatrix4fDeg(float *, const float *, float);
void glmGenerateAxisAngleRotationMatrix4dRad(double *, const double *, double);
void glmGenerateAxisAngleRotationMatrix4dDeg(double *, const double *, double);
void glmOrthonormalizeMatrix3f(float *);
void glmOrthonormalizeMatrix3d(double *);
void glmPrintMatrix2f(const float *);
void glmPrintMatrix2d(const double *);
void glmPrintMatrix3f(const float *);
void glmPrintMatrix3d(const double *);
void glmPrintMatrix4f(const float *);
void glmPrintMatrix4d(const double *);
void glmExpandMatrix24f(float *, const float *);
void glmExpandMatrix24d(double *, const double *);
void glmExpandMatrix23f(float *, const float *);
void glmExpandMatrix23d(double *, const double *);
void glmExpandMatrix34f(float *, const float *);
void glmExpandMatrix34d(double *, const double *);
void glmTransformMeshf(float *, unsigned long, float *, unsigned long, unsigned long, const float *);
void glmTransformMeshd(double *, unsigned long, double *, unsigned long, unsigned long, const double *);
void glmGenerateTransformedMeshf(float *, unsigned long, const float *, unsigned long, float *, unsigned long, const float *, unsigned long, unsigned long, const float *);
void glmGenerateTransformedMeshd(double *, unsigned long, const double *, unsigned long, double *, unsigned long, const double *, unsigned long, unsigned long, const double *);
void glmGenerateShadowMatrix4f(float *, const float *, const float *, const float *);
void glmGenerateShadowMatrix4d(double *, const double *, const double *, const double *);
void glmGeneratePerspectiveProjectionMatrixf(float *, float, float, float, float, float, float);
void glmGeneratePerspectiveProjectionMatrixd(double *, double, double, double, double, double, double);

#ifdef __cplusplus
	}
#endif
	
#endif
