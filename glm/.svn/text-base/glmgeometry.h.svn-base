/* lcc generated prototype file. Do not edit */
#ifndef __glmgeometry_h__
#define __glmgeometry_h__
float glmRayLineIntersectionf(const float *, const float *, const float *, const float *, float *);
double glmRayLineIntersectiond(const double *, const double *, const double *, const double *, double *);
float glmRayPlaneIntersectionf(const float *, const float *, const float *, const float *, float *);
double glmRayPlaneIntersectiond(const double *, const double *, const double *, const double *, double *);
float glmRaySpaceIntersectionf(const float *, const float *, const float *, const float *, float *);
double glmRaySpaceIntersectiond(const double *, const double *, const double *, const double *, double *);
float glmRayHyperSpaceIntersectionf(const float *, const float *, const float *, const float *, float *, unsigned long);
double glmRayHyperSpaceIntersectiond(const double *, const double *, const double *, const double *, double *, unsigned long);
int glmLineSegmentPlaneIntersectionf(const float *, const float *, const float *, const float *, float *, float *);
int glmLineSegmentPlaneIntersectiond(const double *, const double *, const double *, const double *, double *, double *);
int glmLineSegmentSpaceIntersectionf(const float *, const float *, const float *, const float *, float *, float *);
int glmLineSegmentSpaceIntersectiond(const double *, const double *, const double *, const double *, double *, double *);
int glmIsPointInTriangle2f(const float *, const float *, const float *, const float *);
int glmIsPointInTriangle2d(const double *, const double *, const double *, const double *);
int glmIsPointInTriangle3f(const float *, const float *, const float *, const float *);
int glmIsPointInTriangle3d(const double *, const double *, const double *, const double *);
float glmRayTriangleIntersectionf(const float *, const float *, const float *, const float *, const float *, const float *, float *);
double glmRayTriangleIntersectiond(const double *, const double *, const double *, const double *, const double *, const double *, double *);
void glmClosestPointOnLineSegment2f(float *, const float *, const float *, const float *);
void glmClosestPointOnLineSegment2d(double *, const double *, const double *, const double *);
void glmClosestPointOnLineSegment3f(float *, const float *, const float *, const float *);
void glmClosestPointOnLineSegment3d(double *, const double *, const double *, const double *);
float glmRayCircleIntersectionf(const float *, const float *, const float *, float, float *);
double glmRayCircleIntersectiond(const double *, const double *, const double *, double, double *);
float glmRaySphereIntersectionf(const float *, const float *, const float *, float, float *);
double glmRaySphereIntersectiond(const double *, const double *, const double *, double, double *);
float glmRayHyperSphereIntersectionf(const float *, const float *, const float *, float, float *, unsigned long);
double glmRayHyperSphereIntersectiond(const double *, const double *, const double *, double, double *, unsigned long);
float glmRayMeshIntersectionf(const float *, const float *, const float *, unsigned long, const unsigned long *, unsigned long, float *, float *);
double glmRayMeshIntersectiond(const double *, const double *, const double *, unsigned long, const unsigned long *, unsigned long, double *, double *);
int glmCircleLineIntersectionf(const float *, const float, const float *, const float *, float *, float *);
int glmCircleLineIntersectiond(const double *, const double, const double *, const double *, double *, double *);
int glmSpherePlaneIntersectionf(const float *, const float, const float *, const float *, float *, float *);
int glmSpherePlaneIntersectiond(const double *, const double, const double *, const double *, double *, double *);
int glmHyperSphereSpaceIntersectionf(const float *, const float, const float *, const float *, float *, float *);
int glmHyperSphereSpaceIntersectiond(const double *, const double, const double *, const double *, double *, double *);
void glmExtractFrustumf(float (*)[4], const float *, const float *);
void glmExtractFrustumd(double (*)[4], const double *, const double *);
int glmIsPointInFrustumf(const float (*)[4], const float *);
int glmIsPointInFrustumd(const double (*)[4], const double *);
int glmIsSphereInFrustumf(const float (*)[4], const float *, float);
int glmIsSphereInFrustumd(const double (*)[4], const double *, double);
int glmIsCubeInFrustumf(const float (*)[4], float, float, float, float);
int glmIsCubeInFrustumd(const double (*)[4], double, double, double, double);
float glmComputeDistanceToPlane3f(const float *, const float *, const float *);
double glmComputeDistanceToPlane3d(const double *, const double *, const double *);
void glmClosestPointOnPlane3f(float *, const float *, const float *, const float *);
void glmClosestPointOnPlane3d(double *, const double *, const double *, const double *);
float glmComputeDistanceToLine3f(const float *, const float *, const float *);
double glmComputeDistanceToLine3d(const double *, const double *, const double *);
void glmClosestPointOnTriangle3f(float *, const float *, const float *, const float *, const float *);
float glmComputeTriangleArea2f(const float *, const float *, const float *);
double glmComputeTriangleArea2d(const double *, const double *, const double *);
float glmComputeTriangleArea3f(const float *, const float *, const float *);
double glmComputeTriangleArea3d(const double *, const double *, const double *);
void glmComputeBarycentricCoordinates2f(float *, const float *, const float *, const float *, const float *);
void glmComputeBarycentricCoordinates2d(double *, const double *, const double *, const double *, const double *);
void glmComputeBarycentricCoordinates3f(float *, const float *, const float *, const float *, const float *);
void glmComputeBarycentricCoordinates3d(double *, const double *, const double *, const double *, const double *);
int glmMovingSphereTriangleIntersectionf(const float *, float, const float *, const float *, const float *, const float *, const float *, float *, float *, float *, float *);
int glmMovingSphereMeshIntersectionf(const float *, float, const float *, const float *, unsigned long, const unsigned long *, unsigned long, float *, float *, float *, float *);
int glmIsPointInFrontOfPlanef(const float *, const float *, const float *);
int glmIsPointInFrontOfPlaned(const double *, const double *, const double *);
void glmCutTriangleByPlanef(const float *, const float *, const float *, const float *, const float *, const float *, unsigned long, const float *, const float *, const float *, const float *, const float *, float *, unsigned long, float *, unsigned long, float *, unsigned long, unsigned long *, unsigned long *, unsigned long *, float *, unsigned long, float *, unsigned long, float *, unsigned long, unsigned long *, unsigned long *, unsigned long *);
void glmCutTriangleByPlaned(const double *, const double *, const double *, const double *, const double *, const double *, unsigned long, const double *, const double *, const double *, const double *, const double *, double *, unsigned long, double *, unsigned long, double *, unsigned long, unsigned long *, unsigned long *, unsigned long *, double *, unsigned long, double *, unsigned long, double *, unsigned long, unsigned long *, unsigned long *, unsigned long *);
void glmCutPolygonByPlanef(const float *, unsigned long, const float *, unsigned long, unsigned long, const float *, unsigned long, unsigned long, const float *, const float *, float *, unsigned long, float *, unsigned long, float *, unsigned long, unsigned long *, float *, unsigned long, float *, unsigned long, float *, unsigned long, unsigned long *);
#endif
